buildscript {
    ext.kotlin_version = '1.3.0'

    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

version '1.0-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'idea'

sourceCompatibility = 1.8

sourceSets.main.kotlin.srcDirs += 'src'

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    implementation 'com.beust:klaxon:5.0.1'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

task param_optimizer_ga(dependsOn: classes, type: JavaExec) {
    main = "tetris.entrypoint.ParamOptimizerGAKt"
    classpath = sourceSets.main.runtimeClasspath
    standardInput = System.in
    ignoreExitValue = true
}

task run_instance(dependsOn: classes, type: JavaExec) {
    main = "tetris.entrypoint.InstanceRunnerKt"
    classpath = sourceSets.main.runtimeClasspath
    standardInput = System.in
    ignoreExitValue = true
}

task run_sampler(dependsOn: classes, type: JavaExec) {
    main = "tetris.entrypoint.ScoreSamplerKt"
    classpath = sourceSets.main.runtimeClasspath
    standardInput = System.in
    ignoreExitValue = true
}
